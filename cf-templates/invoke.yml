Resources:
  Primer:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: python3.9
      Code:
        ZipFile: |
          import cfnresponse
          import boto3


          def init(**kwargs):
              print(f"{kwargs=}")


          def handler(event, context):
              try:
                  if event["RequestType"] == "Create":
                      init(**event["ResourceProperties"])
                      cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
                  elif event["RequestType"] == "Delete":
                      cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
                  elif event["RequestType"] == "Update":
                      cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
                  else:
                      cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
              except Exception as e:  # noqa: E722
                  print(e)
                  cfnresponse.send(event, context, cfnresponse.FAILED, {})

      Description: Invoke a function.
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: 30
  InvokeLambda:
    Type: Custom::InvokeLambda
    Version: "1.0"
    Properties:
      ServiceToken: !GetAtt Primer.Arn
      param1: hoge
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
      Policies:
      - PolicyName: lambda-execute-role
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
            - "rds-data:*"
            - "ec2:CreateNetworkInterface"
            - "ec2:DescribeNetworkInterfaces"
            - "ec2:DetachNetworkInterface"
            - "ec2:DeleteNetworkInterface"
            Resource: "*"
